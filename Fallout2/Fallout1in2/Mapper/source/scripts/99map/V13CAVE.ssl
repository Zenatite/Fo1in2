#include "define.h"
#include "command.h"
#include "maps/v13ent.h"
#include "updatmap.h"
#include "voodoo.h"

export variable vault_door_ptr;

procedure start;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

procedure Endgame_Slides;
procedure Endgame_Slides_Debug;

procedure Endgame_Slides_Expanded;
procedure Endgame_Slides_Expanded_Debug;

procedure base_inventory;
procedure TagInven;
procedure cheat_mode;

procedure SetLight;

variable endgame_running;
variable party_elevation;
variable Item := 0;
variable NumItems := 0;

#define EVENT_END_1           (1)
#define EVENT_END_2           (2)
#define EVENT_SetStartItems   (3)

procedure start begin
end

procedure map_enter_p_proc begin
variable Item;

   call SetLight;

   if v13_invaded then begin
      set_map_var(MVAR_INVADED, 1);
   end

   if (map_first_run) then begin
      override_map_start_hex(17690, 0, 2);

      // randomize time between 3:00AM and 7:00AM to get "night sky" message:
      // Advance until 00:00, then add 3 to 7 hours.
      game_time_advance((ONE_GAME_MINUTE * (ticks_til_hour(0) / 60) / 10) + (ONE_GAME_MINUTE * random(180, 420)));

      set_global_var(GVAR_QUEST_VAULT13_0_WATERCHIP_TRACKER, 1);

      // Give initial reputation
      inc_v13_rep(REP_BONUS_GAME_STARTED);

      // We have to run this in a timer event since otherwise the code executes to early
      // and the fo1_settings.ini values aren't refreshed yet
      add_timer_event(self_obj, 0, EVENT_SetStartItems);
   end
   else begin
      // Check if we should run the endgame scene
      if (waterchip_returned and (military_base_destroyed and cathedral_destroyed and (endgame_running == 0)) and not(is_story_finished)) then begin
         // Hide party members
         //party_member_hide_all

         game_ui_disable;
         if fo1in2_expanded_slides_enabled then begin
            call Endgame_Slides_Expanded;
            //call Endgame_Slides_Expanded_Debug;
         end
         else begin
            call Endgame_Slides;
            //call Endgame_Slides_Debug;
         end
      end
      else begin
         override_map_start(136, 129, 0, 1);
      end
   end

   set_global_var(GVAR_LOAD_MAP_INDEX, 0);
end

procedure map_update_p_proc begin
   call SetLight;
end

procedure map_exit_p_proc begin
   // Activate V15 on the worldmap
   mark_on_map(AREA_VAULT_15)
end

procedure SetLight begin
   if not(endgame_running) and (global_var(GVAR_OVERSEER_END_SEQ) == 0) and (not(is_story_finished)) then begin
      Darkness;
   end
   else begin
      if is_story_finished then
         Darkness;
      else
         set_light_level(100);
   end
end

procedure timed_event_p_proc begin
variable Critter;

   if (fixed_param == EVENT_SetStartItems) then begin
      if (global_var(GVAR_IRONMAN_MODE) == 0) then begin
         call base_inventory;
         call TagInven;
      end
      else if (global_var(GVAR_IRONMAN_MODE) == 1) then
         call base_inventory;
      else if (global_var(GVAR_IRONMAN_MODE) == 2) then
         call TagInven;
   end
   else if (fixed_param == EVENT_END_1) then begin
      debug_red("EG Scene 1 - Setup");
      kill_critter_type(PID_RAT_CAVE, 0);

      set_light_level(100);
      override_map_start(90, 96, 0, 5);
      //attempt_place_party(dude_tile, 0)

      if Ian_In_Party then begin
         attempt_place_party_member(Ian_ptr, 19493, 0)
         obj_rotate(Ian_ptr, 0);
      end
      if Katja_In_Party then begin
         attempt_place_party_member(Katja_ptr, 19891, 0)
         obj_rotate(Katja_ptr, 5);
      end
      if Tycho_In_Party then begin
         attempt_place_party_member(Tycho_ptr, 19488, 0)
         obj_rotate(Tycho_ptr, 4);
      end
      if Dog_In_Party then begin
         attempt_place_party_member(Dog_ptr, 19491, 0)
         obj_rotate(Dog_ptr, 5);
      end
      if Tandi_In_Party then begin
         attempt_place_party_member(Tandi_ptr, 19892, 0)
         obj_rotate(Tandi_ptr, 5);
      end
      if MrHandyC_In_Party then begin
         attempt_place_party_member(Handy_ptr, 20090, 0)
         obj_rotate(Handy_ptr, 5);
      end
      if Eyebot_In_Party then begin
         attempt_place_party_member(Eyebot_ptr, 20091, 0)
         obj_rotate(Eyebot_ptr, 5);
      end
      tile_refresh_display;

      gfade_out(1);
      endgame_slideshow;

      endgame_running := 2;
      add_timer_event(self_obj, game_ticks(1), EVENT_END_2);
   end
   else if (fixed_param == EVENT_END_2) then begin
      debug_red("EG Scene 2 - Overseer approaching");

      // Create the Overseer while the ending slides are running:
      Critter := create_object_sid(PID_OVERSEER, 0, 0, SCRIPT_OVER);
      set_map_var(0, Critter);
      obj_rotate(Critter, 2);

      // Move to the vault door and use it:
      critter_attempt_placement(Critter, 15690, dude_elevation);
      obj_unlock(vault_door_ptr);
      use_obj(vault_door_ptr);

      set_global_var(GVAR_OVERSEER_END_SEQ, 1);
      endgame_running := 3;
   end
end

procedure base_inventory begin
   call give_item(dude_obj, {PID_KNIFE: 1, PID_10MM_PISTOL: 1, PID_10MM_JHP: 2, PID_STIMPAK: 4, PID_FLARE: 2});
end

procedure TagInven begin
   if is_skill_tagged(SKILL_LOCKPICK) then begin
      Item := create_object(PID_LOCKPICKS, 0, 0);
      add_obj_to_inven(dude_obj, Item);
   end
   if is_skill_tagged(SKILL_UNARMED_COMBAT) then begin
      Item := create_object(PID_BRASS_KNUCKLES, 0, 0);
      add_obj_to_inven(dude_obj, Item);
   end
   if is_skill_tagged(SKILL_FIRST_AID) then begin
      Item := create_object(PID_STIMPAK, 0, 0);
      add_mult_objs_to_inven(dude_obj, Item, 2);
   end
   if is_skill_tagged(SKILL_DOCTOR) then begin
      Item := create_object(PID_FIRST_AID_KIT, 0, 0);
      add_obj_to_inven(dude_obj, Item);
   end
   if is_skill_tagged(SKILL_SMALL_GUNS) then begin
      Item := create_object(PID_10MM_JHP, 0, 0);
      add_obj_to_inven(dude_obj, Item);
   end
   if is_skill_tagged(SKILL_THROWING) then begin
      Item := create_object(PID_THROWING_KNIFE, 0, 0);
      add_mult_objs_to_inven(dude_obj, Item, 2);
   end
   if is_skill_tagged(SKILL_REPAIR) then begin
      Item := create_object(PID_MULTI_TOOL, 0, 0);
      add_obj_to_inven(dude_obj, Item);
   end
   if is_skill_tagged(SKILL_OUTDOORSMAN) then begin
      Item := create_object(PID_WATER_FLASK, 0, 0);
      add_mult_objs_to_inven(dude_obj, Item, 3);
   end
   if is_skill_tagged(SKILL_SCIENCE) then begin
      Item := create_object(PID_MENTATS, 0, 0);
      add_mult_objs_to_inven(dude_obj, Item, 2);
      Item := create_object(PID_BUFFOUT, 0, 0);
      add_mult_objs_to_inven(dude_obj, Item, 2);
   end
end

/*******************************************************************
   Set the outcome of the endgame slides.
*******************************************************************/
procedure Endgame_Slides_Debug begin
   set_end_necropolis_survived;
   //set_end_foa_invaded;
   set_end_junktown_gizmo;
   //set_end_junktown_killian;
   //set_end_shady_good;
   //set_end_junktown_invaded;
   set_end_bos_bad;
   set_end_hub_bad;
   set_end_raiders_alive;

   add_timer_event(self_obj, game_ticks(0), EVENT_END_1);
end

procedure Endgame_Slides begin
   // Start
   if (global_var(GVAR_ENDGAME_MOVIE_MUTANTS) == 0) then
      set_end_Master;

   // Necropolis
   if necropolis_invaded then
      set_end_necropolis_invaded;
   else if (necropolis_wpump_fixed and global_var(GVAR_NECROPOLIS_PARCHED) == 0) then
      set_end_necropolis_survived;
   else
      set_end_necropolis_dehydrated;

   // Boneyard
   if boneyard_visible_on_map then begin
      if /*followers_trained*/ not(boneyard_invaded) and is_nicole_alive and is_laura_escaped then
         set_end_foa_trained; // good ending \o/
      else
         set_end_foa_invaded;
   end

   // Shady Sands
   if shady_sands_visible_on_map then begin
      if shady_invaded then
         set_end_shady_invaded;
      else if is_tandi_alive and is_aradesh_alive then
         set_end_shady_good;
      else if is_aradesh_alive then
         set_end_shady_tandi_dead;
      else if is_tandi_alive then
         set_end_shady_aradesh_dead;
      else
         set_end_shady_bad;
   end

   // Junktown
   if junktown_visible_on_map then begin
      if junktown_invaded or (not(is_killian_alive) and (not(is_gizmo_alive))) then
         set_end_junktown_invaded;
      else if is_gizmo_alive then
         set_end_junktown_gizmo;
      else
         set_end_junktown_killian;
   end

   // Brotherhood of Steel
   if brotherhood_visible_on_map then begin
      if bos_invaded then
         set_end_bos_invaded;
      else if is_rhombus_alive then
         set_end_bos_good;
      else
         set_end_bos_bad;
   end

   // Hub
   if hub_visible_on_map then begin
      if hub_invaded then
         set_end_hub_bad;
      /*else if ( is_harold_alive and not(is_decker_alive) and (global_var(GVAR_SLIDE_KIND_TO_HAROLD) == 1) ) then*/
      else if (global_var(GVAR_MISSING_CARAVAN) >= 2) and not(is_decker_alive) and is_hightower_alive and is_harold_alive and (global_var(GVAR_SLIDE_KIND_TO_HAROLD) == 1) then
         set_end_hub_good;
      else
         set_end_hub_bad;
   end

   // Raiders
   if raiders_visible_on_map then begin
      if ((get_raiders_alive <= 3) or (not(is_garl_alive) and (get_raiders_alive <= 8))) then
         set_end_raiders_dead;
      else if (get_raiders_alive < 16) then
         set_end_raiders_hurt;
      else
         set_end_raiders_alive;
   end
   else begin
      set_end_raiders_alive;
   end

   // Vault Dweller
   set_end_ending_vd;

   add_timer_event(self_obj, game_ticks(0), EVENT_END_1);
end

procedure Endgame_Slides_Expanded_Debug begin
   set_global_var(GVAR_ENDGAME_MOVIE_MUTANTS, 0);

   set_end_fo1in2_Master;
   //set_end_fo1in2_necropolis_survived;
   //set_end_fo1in2_shady_aradesh_dead;
   //set_end_fo1in2_adytum_blades;
   //set_end_fo1in2_foa_trained;

   //set_end_fo1in2_gunrunners_staying;
   //set_end_fo1in2_gunrunners_leaving;
   //set_end_fo1in2_deathclaws_alive;

   //set_end_fo1in2_junktown_killian;
   //set_end_fo1in2_junktown_gizmo;
   //set_end_fo1in2_bos_good;
   //set_end_fo1in2_hub_default;
   //set_end_fo1in2_hub_harold;
   //set_end_fo1in2_raiders_dead;

   //set_end_fo1in2_ian;
   //set_end_fo1in2_tycho;
   //set_end_fo1in2_katja;
   //set_end_fo1in2_dogmeat;

   //set_end_fo1in2_glow_neutral;
   //set_end_fo1in2_glow_bonus;

   set_end_fo1in2_ending_vd;

   add_timer_event(self_obj, game_ticks(0), EVENT_END_1);
end

procedure Endgame_Slides_Expanded begin
   // Start
   if (global_var(GVAR_ENDGAME_MOVIE_MUTANTS) != 1) then
      set_end_fo1in2_Master;
   else
      set_end_fo1in2_Vats;
   set_global_var(GVAR_ENDGAME_MOVIE_MUTANTS, 0); // Need to reset this for the expanded slides

   // Necropolis
   if necropolis_invaded then
      set_end_fo1in2_necropolis_invaded;
   else if (necropolis_wpump_fixed and global_var(GVAR_NECROPOLIS_PARCHED) == 0) then
      set_end_fo1in2_necropolis_survived;
   else
      set_end_fo1in2_necropolis_dehydrated;

   // Shady Sands
   if shady_sands_visible_on_map then begin
      if shady_invaded then
         set_end_fo1in2_shady_invaded;
      else if is_tandi_alive and is_aradesh_alive then
         set_end_fo1in2_shady_good;
      else if is_aradesh_alive then
         set_end_fo1in2_shady_tandi_dead;
      else if is_tandi_alive then
         set_end_fo1in2_shady_aradesh_dead;
      else
         set_end_fo1in2_shady_bad;
   end

   // Boneyard
   if boneyard_visible_on_map then begin
      if boneyard_invaded then begin
         set_end_fo1in2_foa_invaded;
      end
      else begin
         // Adytum
         if is_caleb_alive then
            set_end_fo1in2_adytum_regulators;
         else if is_razor_alive then
            set_end_fo1in2_adytum_blades;

         // FoA
         if is_nicole_alive and is_laura_escaped then
            set_end_fo1in2_foa_trained; // good ending \o/
         else
            set_end_fo1in2_foa_invaded;

         // Gunrunners
         if is_caleb_alive and (global_var(GVAR_DEATHCLAWS_KILLED) >= 2) then
            set_end_fo1in2_gunrunners_leaving;
         else if not(is_caleb_alive) and (global_var(GVAR_DEATHCLAWS_KILLED) >= 2) then
            set_end_fo1in2_gunrunners_staying;
         else if is_caleb_alive and (global_var(GVAR_DEATHCLAWS_KILLED) < 2) then
            set_end_fo1in2_gunrunners_rich;
      end

      // Deathclaws
      if (global_var(GVAR_DEATHCLAWS_KILLED) < 2) then
         set_end_fo1in2_deathclaws_alive;
   end

   // Junktown
   if junktown_visible_on_map then begin
      if junktown_invaded or (not(is_killian_alive) and (not(is_gizmo_alive))) then
         set_end_fo1in2_junktown_invaded;
      else if is_gizmo_alive then
         set_end_fo1in2_junktown_gizmo;
      else
         set_end_fo1in2_junktown_killian;
   end

   // Brotherhood of Steel
   if brotherhood_visible_on_map then begin
      if bos_invaded then
         set_end_fo1in2_bos_invaded;
      else if is_rhombus_alive then
         set_end_fo1in2_bos_good;
      else
         set_end_fo1in2_bos_bad;
   end

   // Hub
   if hub_visible_on_map then begin
      if (hub_invaded or (global_var(GVAR_MISSING_CARAVAN) < 2)) then begin
         set_end_fo1in2_hub_bad;
      end
      else begin
         if is_decker_alive and not(is_hightower_alive) then
            set_end_fo1in2_hub_powerhouse;
         else if not(is_decker_alive) and not(is_hightower_alive) then
            set_end_fo1in2_hub_war;
         else
            set_end_fo1in2_hub_default;

         // Harold
         if (is_harold_alive) and (global_var(GVAR_SLIDE_KIND_TO_HAROLD) == 1) then
            set_end_fo1in2_hub_harold;
      end
   end

   // Raiders
   if raiders_visible_on_map then begin
      if ((get_raiders_alive <= 3) or (not(is_garl_alive) and (get_raiders_alive <= 8))) then
         set_end_fo1in2_raiders_dead;
      else if (get_raiders_alive < 16) then
         set_end_fo1in2_raiders_hurt;
      else
         set_end_fo1in2_raiders_alive;
   end
   else begin
      set_end_fo1in2_raiders_alive;
   end

   if Ian_In_Party then
      set_end_fo1in2_ian;
   if Tycho_In_Party then
      set_end_fo1in2_tycho;
   if Katja_In_Party then
      set_end_fo1in2_katja;
   if Dog_In_Party then
      set_end_fo1in2_dogmeat;

   if glow_visible_on_map then begin
      if (global_var(GVAR_GLOW_ZAX_STATE) > 0) then
         set_end_fo1in2_glow_neutral;

      // Bonus slide (won in chess)
      if (global_var(GVAR_GLOW_ZAX_STATE) > 1) then
         set_end_fo1in2_glow_bonus;
   end

   // Vault Dweller
   set_end_fo1in2_ending_vd;

   add_timer_event(self_obj, game_ticks(0), EVENT_END_1);
end
