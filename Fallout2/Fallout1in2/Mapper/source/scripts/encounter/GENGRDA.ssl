/*

   Encounter - Generic Guard

*/

#include "define.h"

#define NAME                    SCRIPT_GENGRDA
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

#define MAX_TRAVEL              (15)

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

#define LVAR_Home_Tile        (4)
#define LVAR_Home_Rotation    (5)

variable tmp_hostile;
variable initial := 0;
variable scared;

procedure start begin
end

procedure critter_p_proc begin
   if (scared) then begin
      if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
         call flee_dude;
      end
   end
   else begin
      if (tmp_hostile) then begin
         tmp_hostile := 0;
         scared := 1;
         attack(dude_obj);
      end
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure map_enter_p_proc begin
   if (local_var(LVAR_Home_Tile) == 0) then begin
      set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
   end
end

procedure map_update_p_proc begin
   if not(initial) then begin
      set_self_team(TEAM_SHADY_SANDS);
      set_self_ai(15 + random(0, 4));
      add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
      tmp_hostile := global_var(GVAR_ENEMY_RANDOM_ENC);
      initial := 1;
   end
end

procedure pickup_p_proc begin
   if (scared == 0) then begin
      tmp_hostile := 1;
      set_global_var(GVAR_ENEMY_RANDOM_ENC, 1);
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (scared) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else begin
      float_msg(self_obj, message_str(SCRIPT_GENGRDA, random(100, 105)), FLOAT_MSG_GREEN);
   end
end

procedure timed_event_p_proc begin
   if not(combat_is_initialized) then begin
      if (tile_distance(self_tile, local_var(LVAR_Home_Tile)) < MAX_TRAVEL) then
         self_walk_to_tile(tile_num_in_direction(self_tile, random(0, 5), random(3, 5)));
      else
         self_walk_to_tile(tile_num_in_direction(local_var(LVAR_Home_Tile), random(0, 5), random(3, 5)));
   end
   add_timer_event(self_obj, game_ticks(random(0, 3)), 1);
end
