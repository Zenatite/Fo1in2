/*

   Mariposa - Guard Team 4

*/

/* Include Files */
#include "define.h"
#include "area/mbase.h"

#define NAME                    SCRIPT_GENSUPR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_MBASE)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

procedure GenSupr00;
procedure GenSupr03;
procedure GenSupr03a;
procedure GenSupr03b;
procedure GenSupr04;
procedure GenSupr05;
procedure GenSupr06;
procedure GenSupr07;
procedure GenSupr08;
procedure GenSuprAlert;
procedure GenSuprxx;

procedure set_alert_tile;

#define LVAR_MoveHex       (4)

// Is the mutant in the control room?
// coords: top left, top right, bottom left, bottom right
#define in_control_room       (tile_in_tile_rect(21076, 21062, 23476, 23462, self_tile))

#define elevator_hex          (14520)
#define ElevDoor_hex          (14720)

#define FF1_hex               (21068)
#define FF2_hex               (15520)

#define EVENT_CLOSE_DOOR      (1)

import variable radio_room_attacked;

variable tmp_hostile;
variable round_counter;
variable home_tile;
variable alert_tile;
variable night_tile;

variable ElevDoor_ptr;

procedure start begin
end

procedure combat_p_proc begin
   alert_check;
   knock_out_player_check;
end

procedure critter_p_proc begin
   if (tmp_hostile and self_can_see_dude) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (self_can_see_dude) then begin
         if (global_var(GVAR_VATS_ALERT)) then begin
            tmp_hostile := 1;
         end
         else if (not(map_var(2))) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
               dialogue_system_enter;
            end
         end
      end
      if in_control_room and ((global_var(GVAR_ROBCTRL_PESTS_HOWMUCH) >= robo_attack_all_pests) and (global_var(GVAR_ROBCTRL_PESTS_HOWMUCH) <= robo_attack_small_pests) and (self_elevation == 0)) then begin
         kill_critter(self_obj, ANIM_fall_front_blood);
      end
      else begin
         if (global_var(GVAR_VATS_ALERT)) then begin
            if (self_elevation == 0) then begin
               if (self_tile != elevator_hex) then begin
                  self_walk_to_tile(elevator_hex);
               end
               else begin
                  //move_to(self_obj, elevator_hex, 1);
                  add_timer_event(self_obj, game_ticks(1), EVENT_CLOSE_DOOR);
               end
            end
            else begin
               if (self_tile != alert_tile) then begin
                  self_walk_to_tile(alert_tile);
               end
            end
         end
         else begin
            if night then begin
               if (self_elevation == 0) then begin
                  if (self_tile != elevator_hex) then begin
                     self_walk_to_tile(elevator_hex);
                  end
                  else begin
                     move_to(self_obj, elevator_hex, 1);
                  end
               end
               else begin
                  if (self_tile != night_tile) then begin
                     self_walk_to_tile(night_tile);
                  end
               end
            end
            else if (self_elevation == 1) then begin
               if (self_tile != elevator_hex) then begin
                  self_walk_to_tile(elevator_hex);
               end
               else begin
                  move_to(self_obj, elevator_hex, 0);
               end
            end
            else if (self_tile != local_var(LVAR_MoveHex)) then begin
               self_walk_to_tile(local_var(LVAR_MoveHex));
            end
         end
      end
   end
end

procedure damage_p_proc begin
   if (self_elevation == 0) then begin
      radio_room_attacked := 1;
   end
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data(tma_source_generic, TMA_MSG_MBASE, -1, -1, 997, 999);

   dude_look_at_self;
   if (global_var(GVAR_LIEUTENANTS_DEAD)) then begin
      call GenSupr08;
   end
   else begin
      if (dude_is_armed) and not(tmp_hostile) then begin
         if (random(0, 5) == 5) then begin
            call GenSupr00;
         end
         else begin
            tmp_hostile := 1;
         end
      end
      else begin
         start_dialog_at_node(GenSupr03);
      end
   end
end

procedure map_enter_p_proc begin
   set_self_team(TEAM_NECROPOLIS_MUTANT);
   set_self_ai(AI_SUPER_MUTANT_AGGRESSIVE);
   call set_alert_tile;
   if not(is_loading_game) then begin
      if (not((global_var(GVAR_ROBCTRL_PESTS_HOWMUCH) >= robo_attack_all_pests) and (global_var(GVAR_ROBCTRL_PESTS_HOWMUCH) <= robo_attack_small_pests))) then begin
         if (global_var(GVAR_VATS_ALERT)) then begin
            move_to(self_obj, alert_tile, 1);
         end
         else begin
            if night then begin
               move_to(self_obj, night_tile, 1);
            end
            else begin
               move_to(self_obj, local_var(LVAR_MoveHex), 0);
            end
         end
      end
   end

   if (ElevDoor_ptr == 0) then begin
      ElevDoor_ptr := tile_contains_pid_obj(ElevDoor_hex, 0, PID_DOOR_METAL_ELEV);
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_CLOSE_DOOR) then begin
      if (ElevDoor_ptr != 0) then begin
         if obj_is_open(ElevDoor_ptr) then begin
            obj_close(ElevDoor_ptr);
            move_to(self_obj, elevator_hex, 1);
         end
      end
   end
end

procedure GenSupr00 begin
   float_msg(self_obj, message_str(NAME, random(101, 103)), FLOAT_MSG_NORMAL);
   tmp_hostile := 1;
end

procedure GenSupr03 begin
   gsay_reply(NAME, random(104, 106));
   NLowOption(107, GenSupr04);
   NOption(108, GenSupr04, 4);
   NOption(109, GenSupr05, 5);
   NOption(110, GenSupr03a, 6);
   if dude_wearing_coc_robe then begin
      NOption(111, GenSupr03b, 6);
   end
end

procedure GenSupr03a begin
   if (dude_skill_success(SKILL_SPEECH, 0)) then begin
      call GenSupr07;
   end
   else begin
      call GenSupr06;
   end
end

procedure GenSupr03b begin
   coc_disguise_check;
   if DISGUISED and (dude_skill_success(SKILL_SPEECH, 25)) then begin
      call GenSupr07;
   end
   else begin
      call GenSupr06;
   end
end

procedure GenSupr04 begin
   tmp_hostile := 1;
   gsay_message(NAME, random(112, 114), NEUTRAL_REACTION);
end

procedure GenSupr05 begin
   gsay_reply(NAME, 115);
   NOption(116, GenSuprxx, 5);
   NOption(117, GenSuprAlert, 5);
end

procedure GenSupr06 begin
   tmp_hostile := 1;
   gsay_message(NAME, random(118, 120), NEUTRAL_REACTION);
end

procedure GenSupr07 begin
   set_map_var(2, 1);
   gsay_message(NAME, random(121, 123), NEUTRAL_REACTION);
end

procedure GenSupr08 begin
   float_msg(self_obj, message_str(NAME, random(124, 127)), FLOAT_MSG_NORMAL);
   tmp_hostile := 1;
end

procedure GenSuprAlert begin
   set_global_var(GVAR_VATS_ALERT, 1);
   tmp_hostile := 1;
end

procedure GenSuprxx begin
   set_global_var(GVAR_ENTERING_VATS_HOW, 2);
   load_map(MAP_MBVATS12, 5);
end

procedure set_alert_tile begin
   if (not(local_var(LVAR_MoveHex))) then begin
      set_local_var(LVAR_MoveHex, self_tile);
   end
   if (local_var(LVAR_MoveHex) == 23065) then begin
      alert_tile := 21917;
      night_tile := 26274;
   end
   else if (local_var(LVAR_MoveHex) == 22466) then begin
      alert_tile := 21922;
      night_tile := 27476;
   end
   else if (local_var(LVAR_MoveHex) == 22470) then begin
      alert_tile := 22318;
      night_tile := 27072;
   end
end
